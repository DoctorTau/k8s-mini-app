# Secret for PostgreSQL Password
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  POSTGRES_PASSWORD: cG9zdGdyZXNfcGFzc3dvcmQ=

---
# Persistent Volume Claim for PostgreSQL Data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
# Deployment for PostgreSQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          # Health checks
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
# Service for PostgreSQL
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres

---
# Secret for pgAdmin Credentials
apiVersion: v1
kind: Secret
metadata:
  name: pgadmin-secret
type: Opaque
data:
  PGADMIN_DEFAULT_EMAIL: ZHJ0dGF1QGdtYWlsLmNvbQ==
  PGADMIN_DEFAULT_PASSWORD: a2VraXMyMjg=

---
# Deployment for pgAdmin
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: dpage/pgadmin4:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "256Mi"
              cpu: "250m"
            requests:
              memory: "128Mi"
              cpu: "125m"
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: PGADMIN_DEFAULT_EMAIL
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: PGADMIN_DEFAULT_PASSWORD
          ports:
            - containerPort: 80

---
# Service for pgAdmin
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: pgadmin

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pgadmin-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: pgadmin.drtau.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pgadmin
                port:
                  number: 80
---
# Deployment for hero-api
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hero-api
spec:
  replicas: 5
  selector:
    matchLabels:
      app: hero-api
  template:
    metadata:
      labels:
        app: hero-api
    spec:
      containers:
        - name: hero-api
          image: drtau/hero-api:latest

          imagePullPolicy: Always
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "250m"
              memory: "256Mi"
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: DB_HOST
              value: "postgres"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: "postgres"
            - name: DB_NAME
              value: "postgres"
          ports:
            - containerPort: 8080

---
# Service for hero-api
apiVersion: v1
kind: Service
metadata:
  name: hero-api
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: hero-api
---
# Ingress for hero-api
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: heroapi-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: heroapi.drtau.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hero-api
                port:
                  number: 8080
